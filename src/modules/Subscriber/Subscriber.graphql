type Mutation {
    subscribeEmail(input: EmailInput!): Subscriber
    unSubscribeEmail(_id: ID!): Subscriber
}
type Query {
    getAllEmailOnSubs: [Subscriber]
    getEmailOnSubsPagination(
    page: Int
    limit: Int
    search: [SearchEmailInput]
    filter: [FilterEmailInput]
    sort: [SortEmailInput]
  ): EmailPagination
    getEmailOnSubsPaginationTotal(
    page: Int
    limit: Int
    search: [SearchEmailInput]
    filter: [FilterEmailInput]
  ): EmailPaginationTotal
}

enum EnumSubscriberStatus {
  OnSubscribe
  Canceled
}

type Subscriber {
    _id: ID!
    email: String
    status: EnumSubscriberStatus
    subscribeAt: Float
    createdAt: Float
    createdBy: UserSlim
    updatedAt: Float
    updatedBy: UserSlim

    # Resolver Field
    cardinalNumber: String
}

input EmailInput {
    email: String
    language: String
}

type EmailPagination {
  currentPage: Float
  data: [Subscriber]
}
type EmailPaginationTotal {
  totalPages: Float
  totalRows: Float
  currentPage: Float
}

input SearchEmailInput {
  textSearch: String
  fieldSearch: String
}

input FilterEmailInput {
  fieldFilter: String
  values: [String]
}

input SortEmailInput {
  sort: Int
  fieldSort: String
}